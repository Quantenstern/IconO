AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for a websockets sendmessage.


Parameters:
  Stage:
    Description: 'Stage of the project'
    Default: Prod
    Type: String

Globals:
  Function:
    Timeout: 180

Resources:
  IconWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: IconWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: '$request.body.action'

  WsParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub WsUrlParameter-${Stage}
      Value: !Sub wss://${IconWebSocket}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/
      Type: String

  #MyApiMapping:
  #  Type: AWS::ApiGatewayV2::ApiMapping
  #  DependsOn:
  #    - IconWebSocket
  #  Properties:
  #    DomainName: ws-icon.weareunit.ai
  #    ApiId: !Ref IconWebSocket
  #    Stage: !Ref Stage

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref IconWebSocket
      RouteKey: $connect
      OperationName: ConnectRoute
      Target: !Join
          - '/'
          - - 'integrations'
            - !Ref ConnectInteg
  ConnectInteg:
      Type: AWS::ApiGatewayV2::Integration
      Properties:
          ApiId: !Ref IconWebSocket
          Description: Connect Integration
          IntegrationType: AWS_PROXY
          IntegrationUri: 
              Fn::Sub:
                  arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref IconWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref IconWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref IconWebSocket
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendInteg
  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref IconWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations
  
  SendEspesadoresRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref IconWebSocket
      RouteKey: sendespesador
      AuthorizationType: NONE
      OperationName: SendEspesador
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendEspesadoresInteg

  SendEspesadoresInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref IconWebSocket
      Description: Ver Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendEspesadoresFuncion.Arn}/invocations

#####

  SendFlotacionRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref IconWebSocket
      RouteKey: sendflotacion
      AuthorizationType: NONE
      OperationName: SendFlotacion
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendFlotacionInteg

  SendFlotacionInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref IconWebSocket
      Description: Ver Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendFlotacionFunction.Arn}/invocations

  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - SendRoute
    - SendEspesadoresRoute
    - SendFlotacionRoute
    - DisconnectRoute
    Properties:
      ApiId: !Ref IconWebSocket

  StageAPI:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: !Ref Stage
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref IconWebSocket

  SendEspesadoresFuncion:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/
      Handler: onespesadores.lambda_handler
      MemorySize: 10240
      Runtime: python3.6
      Layers:
        - 'arn:aws:lambda:sa-east-1:347034527139:layer:tf_1_11_keras:1'
      Environment:
        Variables:
          TABLE_NAME: !Sub '{{resolve:ssm:ConnectionsTableName-${Stage}:1}}'
          DIR_NAME: sendespesador
          MODEL_BUCKET: !Sub '{{resolve:ssm:ModelBucket-${Stage}:1}}'
      Policies:
      - Statement:
        - Effect: Allow
          Action: 
            - s3:*
          Resource: 
            - !Sub arn:aws:s3:::{{resolve:ssm:ModelBucket-${Stage}:1}}/*
            - !Sub arn:aws:s3:::{{resolve:ssm:ModelBucket-${Stage}:1}}
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - 'arn:aws:execute-api:*:*:*/@connections/*'

  SendEspesadoresPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - IconWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendEspesadoresFuncion
      Principal: apigateway.amazonaws.com


  SendFlotacionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/
      Handler: onflotacion.lambda_handler
      MemorySize: 1024
      Runtime: python3.6
      Layers:
        - 'arn:aws:lambda:sa-east-1:347034527139:layer:tf_1_11_keras:1'
      Environment:
        Variables:
          TABLE_NAME: !Sub '{{resolve:ssm:ConnectionsTableName-${Stage}:1}}'
          DIR_NAME: onflotacion
          MODEL_BUCKET: !Sub '{{resolve:ssm:ModelBucket-${Stage}:1}}'
      Policies:
      - Statement:
        - Effect: Allow
          Action: 
            - s3:*
          Resource: 
            - !Sub arn:aws:s3:::{{resolve:ssm:ModelBucket-${Stage}:1}}/*
            - !Sub arn:aws:s3:::{{resolve:ssm:ModelBucket-${Stage}:1}}
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - 'arn:aws:execute-api:*:*:*/@connections/*'

  SendFlotacionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - IconWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendFlotacionFunction
      Principal: apigateway.amazonaws.com

  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/
      Handler: onconnect.lambda_handler
      MemorySize: 256
      Runtime: python3.7
      Environment:
        Variables:
          TABLE_NAME: !Sub '{{resolve:ssm:ConnectionsTableName-${Stage}:1}}'
          HANDLER_ARN: !Sub '{{resolve:ssm:DevAuthorizer-ARN-${Stage}:1}}'
      Policies:
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow
            Action: dynamodb:*
            Resource: 
              - !Sub '{{resolve:ssm:ConnectionsTable-ARN-${Stage}:1}}'
          - Effect: Allow
            Action: 
              - lambda:InvokeFunction
            Resource: 
              - !Sub '{{resolve:ssm:DevAuthorizer-ARN-${Stage}:1}}'

  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - IconWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com

  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/
      Handler: onsendmessage.lambda_handler
      MemorySize: 256
      Runtime: python3.7
      Layers:
        - 'arn:aws:lambda:sa-east-1:016572979516:layer:icon-numpy:1'
      Environment:
        Variables:
          TABLE_NAME: !Sub '{{resolve:ssm:ConnectionsTableName-${Stage}:1}}'
          DIR_NAME: sendmessage
          MODEL_BUCKET: !Sub '{{resolve:ssm:ModelBucket-${Stage}:1}}'
          HANDLER_ARN: !Sub '{{resolve:ssm:DevAuthorizer-ARN-${Stage}:1}}'
      Policies:
      - Statement:
        - Effect: Allow
          Action: 
            - s3:*
          Resource: 
            - !Sub arn:aws:s3:::{{resolve:ssm:ModelBucket-${Stage}:1}}/*
            - !Sub arn:aws:s3:::{{resolve:ssm:ModelBucket-${Stage}:1}}
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - 'arn:aws:execute-api:*:*:*/@connections/*'

  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - IconWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendMessageFunction
      Principal: apigateway.amazonaws.com

Outputs:
  SendMessageFunctionArn:
    Description: SendMessageFunction Arn
    Value: !GetAtt SendMessageFunction.Arn


